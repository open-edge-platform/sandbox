export declare const mode: import("@spark-design/core").TokenData<{
    headBackgroundColor: string;
    rowNormalBackgroundColor: string;
    rowBackgroundColorHover: string;
    rowSortArrowColor: string;
    rowSortArrowColorHover: string;
    rowSortArrowColorUp: string;
    rowSortArrowColorDown: string;
    rowZebraBackgroundColor: string;
    rowSelectBackgroundColor: string;
    rowSelectCheckboxColor: string;
    headColor: string;
    rowNormalBorder: string;
    headNormalBorder: string;
    rowBackgroundBolorHover: string;
    normalBorder: string;
    outlineBorder: string;
    outlineBoldBorder: string;
    cellZebraBackgroundColor: string;
    cellBackgroundColorFocus: string;
    minimalLinkColor: string;
    minimalBackgroundColorRowHover: string;
    minimalBackgroundColorHover: string;
    minimalLineColor: string;
    minLinkActive: string;
    rowTextColor: string;
}>;
export declare const modeDark: import("@spark-design/core").TokenData<{
    headBackgroundColor: string;
    rowNormalBackgroundColor: string;
    rowBackgroundColorHover: string;
    rowSortArrowColor: string;
    rowSortArrowColorHover: string;
    rowSortArrowColorUp: string;
    rowSortArrowColorDown: string;
    rowZebraBackgroundColor: string;
    rowSelectBackgroundColor: string;
    rowSelectCheckboxColor: string;
    headColor: string;
    rowNormalBorder: string;
    headNormalBorder: string;
    rowBackgroundBolorHover: string;
    normalBorder: string;
    outlineBorder: string;
    outlineBoldBorder: string;
    cellZebraBackgroundColor: string;
    cellBackgroundColorFocus: string;
    minimalLinkColor: string;
    minimalBackgroundColorRowHover: string;
    minimalBackgroundColorHover: string;
    minimalLineColor: string;
    minLinkActive: string;
    rowTextColor: string;
} & {
    headBackgroundColor: string;
    rowNormalBackgroundColor: string;
    rowZebraBackgroundColor: string;
    rowBackgroundColorHover: string;
    headColor: string;
    rowNormalBorder: string;
    headNormalBorder: string;
    rowBackgroundBolorHover: string;
    normalNorder: string;
    outlineBorder: string;
    outlineBoldBorder: string;
    cellZebraBackgroundColor: string;
    cellBackgroundColorFocus: string;
    rowTextColor: string;
}>;
export declare const modes: {
    light: import("@spark-design/core").TokenData<{
        headBackgroundColor: string;
        rowNormalBackgroundColor: string;
        rowBackgroundColorHover: string;
        rowSortArrowColor: string;
        rowSortArrowColorHover: string;
        rowSortArrowColorUp: string;
        rowSortArrowColorDown: string;
        rowZebraBackgroundColor: string;
        rowSelectBackgroundColor: string;
        rowSelectCheckboxColor: string;
        headColor: string;
        rowNormalBorder: string;
        headNormalBorder: string;
        rowBackgroundBolorHover: string;
        normalBorder: string;
        outlineBorder: string;
        outlineBoldBorder: string;
        cellZebraBackgroundColor: string;
        cellBackgroundColorFocus: string;
        minimalLinkColor: string;
        minimalBackgroundColorRowHover: string;
        minimalBackgroundColorHover: string;
        minimalLineColor: string;
        minLinkActive: string;
        rowTextColor: string;
    }>;
    dark: import("@spark-design/core").TokenData<{
        headBackgroundColor: string;
        rowNormalBackgroundColor: string;
        rowBackgroundColorHover: string;
        rowSortArrowColor: string;
        rowSortArrowColorHover: string;
        rowSortArrowColorUp: string;
        rowSortArrowColorDown: string;
        rowZebraBackgroundColor: string;
        rowSelectBackgroundColor: string;
        rowSelectCheckboxColor: string;
        headColor: string;
        rowNormalBorder: string;
        headNormalBorder: string;
        rowBackgroundBolorHover: string;
        normalBorder: string;
        outlineBorder: string;
        outlineBoldBorder: string;
        cellZebraBackgroundColor: string;
        cellBackgroundColorFocus: string;
        minimalLinkColor: string;
        minimalBackgroundColorRowHover: string;
        minimalBackgroundColorHover: string;
        minimalLineColor: string;
        minLinkActive: string;
        rowTextColor: string;
    } & {
        headBackgroundColor: string;
        rowNormalBackgroundColor: string;
        rowZebraBackgroundColor: string;
        rowBackgroundColorHover: string;
        headColor: string;
        rowNormalBorder: string;
        headNormalBorder: string;
        rowBackgroundBolorHover: string;
        normalNorder: string;
        outlineBorder: string;
        outlineBoldBorder: string;
        cellZebraBackgroundColor: string;
        cellBackgroundColorFocus: string;
        rowTextColor: string;
    }>;
};
