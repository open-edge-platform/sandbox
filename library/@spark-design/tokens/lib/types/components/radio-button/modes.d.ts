export declare const mode: import("@spark-design/core").TokenData<{
    enabledUnselectedBgColor: string;
    enabledUnselectedBorderColor: string;
    unselectedBgColor: string;
    selectedBgColor: string;
    textColorDisabled: string;
    textColor: string;
    disabledBg: string;
    disabledBorder: string;
    enableSelectedBorderColor: string;
    enableSelectedBgColor: string;
    hoverUnselectedBorderColor: string;
    hoverSelectedBorderColor: string;
    pressedUnselectedBgColor: string;
    pressedUnselectedBorderColor: string;
    pressedSelectedBgColor: string;
    pressedSelectedBorderColor: string;
    transparentColor: string;
}>;
export declare const modeDark: import("@spark-design/core").TokenData<{
    enabledUnselectedBgColor: string;
    enabledUnselectedBorderColor: string;
    unselectedBgColor: string;
    selectedBgColor: string;
    textColorDisabled: string;
    textColor: string;
    disabledBg: string;
    disabledBorder: string;
    enableSelectedBorderColor: string;
    enableSelectedBgColor: string;
    hoverUnselectedBorderColor: string;
    hoverSelectedBorderColor: string;
    pressedUnselectedBgColor: string;
    pressedUnselectedBorderColor: string;
    pressedSelectedBgColor: string;
    pressedSelectedBorderColor: string;
    transparentColor: string;
} & {
    enabledUnselectedBgColor: string;
    enabledUnselectedBorderColor: string;
    unselectedBgColor: string;
    selectedBgColor: string;
    textColorDisabled: string;
    textColor: string;
    disabledBg: string;
    disabledBorder: string;
    enableSelectedBorderColor: string;
    enableSelectedBgColor: string;
    hoverUnselectedBorderColor: string;
    hoverSelectedBorderColor: string;
    pressedUnselectedBgColor: string;
    pressedUnselectedBorderColor: string;
    pressedSelectedBgColor: string;
    pressedSelectedBorderColor: string;
    transparentColor: string;
}>;
export declare const modes: {
    light: import("@spark-design/core").TokenData<{
        enabledUnselectedBgColor: string;
        enabledUnselectedBorderColor: string;
        unselectedBgColor: string;
        selectedBgColor: string;
        textColorDisabled: string;
        textColor: string;
        disabledBg: string;
        disabledBorder: string;
        enableSelectedBorderColor: string;
        enableSelectedBgColor: string;
        hoverUnselectedBorderColor: string;
        hoverSelectedBorderColor: string;
        pressedUnselectedBgColor: string;
        pressedUnselectedBorderColor: string;
        pressedSelectedBgColor: string;
        pressedSelectedBorderColor: string;
        transparentColor: string;
    }>;
    dark: import("@spark-design/core").TokenData<{
        enabledUnselectedBgColor: string;
        enabledUnselectedBorderColor: string;
        unselectedBgColor: string;
        selectedBgColor: string;
        textColorDisabled: string;
        textColor: string;
        disabledBg: string;
        disabledBorder: string;
        enableSelectedBorderColor: string;
        enableSelectedBgColor: string;
        hoverUnselectedBorderColor: string;
        hoverSelectedBorderColor: string;
        pressedUnselectedBgColor: string;
        pressedUnselectedBorderColor: string;
        pressedSelectedBgColor: string;
        pressedSelectedBorderColor: string;
        transparentColor: string;
    } & {
        enabledUnselectedBgColor: string;
        enabledUnselectedBorderColor: string;
        unselectedBgColor: string;
        selectedBgColor: string;
        textColorDisabled: string;
        textColor: string;
        disabledBg: string;
        disabledBorder: string;
        enableSelectedBorderColor: string;
        enableSelectedBgColor: string;
        hoverUnselectedBorderColor: string;
        hoverSelectedBorderColor: string;
        pressedUnselectedBgColor: string;
        pressedUnselectedBorderColor: string;
        pressedSelectedBgColor: string;
        pressedSelectedBorderColor: string;
        transparentColor: string;
    }>;
};
